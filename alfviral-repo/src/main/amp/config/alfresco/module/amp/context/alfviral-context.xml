<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE beans PUBLIC '-//SPRING//DTD BEAN//EN' 'http://www.springframework.org/dtd/spring-beans.dtd'>
<beans>
	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="ignoreUnresolvablePlaceholders">
			<value>true</value>
		</property>
		<property name="locations">
			<list>
				<value>classpath:alfresco/extension/alfviral.properties</value>
			</list>
		</property>
	</bean>

	<!-- Web client -->

	<bean id="alfviral.resourceBundle" class="org.alfresco.i18n.ResourceBundleBootstrapComponent">
		<property name="resourceBundles">
			<list>
				<value>alfresco.extension.webclient</value>
			</list>
		</property>
	</bean>

	<bean id="alfviral.webclient.configBootstrap" class="org.alfresco.web.config.WebClientConfigBootstrap"
		init-method="init">
		<property name="configs">
			<list>
				<value>classpath:alfresco/module/${project.artifactId}/ui/web-client-config-custom.xml</value>
			</list>
		</property>
	</bean>

	<!-- Custom model -->

	<bean id="alfviral.dictionaryBootstrap" parent="dictionaryModelBootstrap"
		depends-on="dictionaryBootstrap">
		<property name="models">
			<list>
				<value>alfresco/module/${project.artifactId}/model/alfviralModel.xml</value>
			</list>
		</property>
	</bean>

	<!-- Beans of scans -->

	<bean id="inStreamScan" class="com.fegor.alfresco.security.antivirus.InStreamScan">
		<property name="nodeService">
			<ref bean="nodeService" />
		</property>
		<property name="host">
			<value>${alfviral.host}</value>
		</property>
		<property name="port">
			<value>${alfviral.port}</value>
		</property>
		<property name="timeout">
			<value>${alfviral.timeout}</value>
		</property>
		<property name="chunkSize">
			<value>${alfviral.chunkSize}</value>
		</property>
	</bean>

	<bean id="commandScan" class="com.fegor.alfresco.security.antivirus.CommandScan">
		<property name="nodeService">
			<ref bean="nodeService" />
		</property>
		<property name="command">
			<value>${alfviral.command}</value>
		</property>
	</bean>

	<bean id="virusTotalScan" class="com.fegor.alfresco.security.antivirus.VirusTotalScan">
		<property name="nodeService">
			<ref bean="nodeService" />
		</property>
		<property name="key">
			<value>${vt.key}</value>
		</property>
		<property name="urlScan">
			<value>${vt.url}</value>
		</property>
	</bean>

	<bean id="icapScan" class="com.fegor.alfresco.security.antivirus.ICAPScan">
		<property name="nodeService">
			<ref bean="nodeService" />
		</property>
		<property name="host">
			<value>${alfviral.icap.host}</value>
		</property>
		<property name="port">
			<value>${alfviral.icap.port}</value>
		</property>
		<property name="service">
			<value>${alfviral.icap.service}</value>
		</property>
	</bean>

	<!-- Repository action -->

	<bean id="alfviral.virusscan.action" class="com.fegor.alfresco.action.VirusScanAction"
		parent="action-executer">
		<property name="antivirusService">
			<ref bean="antivirusService" />
		</property>
	</bean>

	<!-- Behavior context -->

	<bean id="alfviral.behavior" class="com.fegor.alfresco.behavior.OnUpdateReadScan"
		init-method="init">
		<property name="policyComponent">
			<ref bean="policyComponent" />
		</property>
		<property name="actionService">
			<ref bean="ActionService" />
		</property>
		<property name="nodeService">
			<ref bean="nodeService" />
		</property>
		<property name="onUpdate">
			<value>${alfviral.on_update}</value>
		</property>
		<property name="onRead">
			<value>${alfviral.on_read}</value>
		</property>

	</bean>

	<!-- Scheduled action services -->

	<bean id="templateActionModelFactory"
		class="org.alfresco.repo.action.scheduled.FreeMarkerWithLuceneExtensionsModelFactory">
		<property name="serviceRegistry">
			<ref bean="ServiceRegistry" />
		</property>
	</bean>

	<bean id="runScriptActionScanFolder"
		class="org.alfresco.repo.action.scheduled.SimpleTemplateActionDefinition">
		<property name="actionName">
			<value>script</value>
		</property>
		<property name="parameterTemplates">
			<map>
				<entry>
					<key>
						<value>script-ref</value>
					</key>
					<!-- En Alfresco 4.0, la plantilla de FreeMarker debe contener caracteres 
						de "escape" con el carÃ¡cter "\". P.e. \$\{selectSingleNode(...)\} -->
					<!-- <value>\$\{selectSingleNode('workspace://SpacesStore', 'lucene', 
						'PATH:"/app:company_home/app:dictionary/app:scripts/cm:com/cm:fegor/cm:alfviral/cm:ScriptScanFolder.js"' 
						)\}</value> -->
					<!-- En Alfresco 3.4e Community -->
					<value>#{"${"}selectSingleNode('workspace://SpacesStore&#39;,
						'lucene',
						'PATH:"/app:company_home/app:dictionary/app:scripts/cm:com/cm:fegor/cm:alfviral/cm:ScriptScanFolder.js"'
						)#{"}"}</value>
				</entry>
			</map>
		</property>
		<property name="templateActionModelFactory">
			<ref bean="templateActionModelFactory" />
		</property>
		<property name="dictionaryService">
			<ref bean="DictionaryService" />
		</property>
		<property name="actionService">
			<ref bean="ActionService" />
		</property>
		<property name="templateService">
			<ref bean="TemplateService" />
		</property>
	</bean>

	<bean id="runScriptScanFolder"
		class="org.alfresco.repo.action.scheduled.CronScheduledQueryBasedTemplateActionDefinition">
		<property name="transactionMode">
			<value>UNTIL_FIRST_FAILURE</value>
		</property>
		<property name="compensatingActionMode">
			<value>IGNORE</value>
		</property>
		<property name="searchService">
			<ref bean="SearchService" />
		</property>
		<property name="templateService">
			<ref bean="TemplateService" />
		</property>
		<property name="queryLanguage">
			<value>lucene</value>
		</property>
		<property name="stores">
			<list>
				<value>workspace://SpacesStore</value>
			</list>
		</property>
		<property name="queryTemplate">
			<value>PATH:"${alfviral.scheduled.pathQuery}"</value>
		</property>
		<property name="cronExpression">
			<value>${alfviral.scheduled.cronExpression}</value>
		</property>
		<property name="jobName">
			<value>jobScanFolder</value>
		</property>
		<property name="jobGroup">
			<value>jobGroupScanFolder</value>
		</property>
		<property name="triggerName">
			<value>triggerScanFolder</value>
		</property>
		<property name="triggerGroup">
			<value>triggerGroupScanFolder</value>
		</property>
		<property name="scheduler">
			<ref bean="schedulerFactory" />
		</property>
		<property name="actionService">
			<ref bean="ActionService" />
		</property>
		<property name="templateActionModelFactory">
			<ref bean="templateActionModelFactory" />
		</property>
		<property name="templateActionDefinition">
			<ref bean="runScriptActionScanFolder" /> <!-- This is name of the action (bean) that gets run -->
		</property>
		<property name="transactionService">
			<ref bean="TransactionService" />
		</property>
		<property name="runAsUser">
			<value>System</value>
		</property>
	</bean>

	<!-- Registry and Service -->

	<bean id="AntivirusServiceRegistry"
		class="com.fegor.alfresco.services.AntivirusServiceDescriptorRegistry"
		parent="ServiceRegistry"></bean>

	<bean id="antivirusService" class="com.fegor.alfresco.services.AntivirusService">
		<property name="contentService">
			<ref bean="contentService" />
		</property>
		<property name="nodeService">
			<ref bean="nodeService" />
		</property>
        <property name="actionService">
            <ref bean="ActionService" />
        </property>	
        <property name="personService">
            <ref bean="PersonService" />
        </property> 
        <property name="authenticationService">
            <ref bean="AuthenticationService" />
        </property>                 
		<property name="icapScan">
			<ref bean="icapScan" />
		</property>
		<property name="commandScan">
			<ref bean="commandScan" />
		</property>
		<property name="inStreamScan">
			<ref bean="inStreamScan" />
		</property>
		<property name="virusTotalScan">
			<ref bean="virusTotalScan" />
		</property>
		<property name="mode">
			<value>${alfviral.mode}</value>
		</property>
		<property name="store">
			<value>${dir.contentstore}</value>
		</property>
		<property name="fileExceptions">
			<value>${alfviral.file.exceptions}</value>
		</property>
        <property name="notifyAdmin">
            <value>${alfviral.notify.admin}</value>
        </property>
        <property name="notifyUser">
            <value>${alfviral.notify.user}</value>
        </property>		
	</bean>
</beans>
